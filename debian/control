Source: polygen
Section: games
Priority: optional
Maintainer: Salvo 'LtWorf' Tomaselli <tiposchi@tiscali.it>
Build-Depends:
 debhelper (>= 9.0.0),
 dh-ocaml,
 ocaml-nox,
 cdbs
Standards-Version: 3.9.8
Homepage: http://polygen.org/
Vcs-Git: https://github.com/ltworf/polygen-debian.git
Vcs-Browser: https://github.com/ltworf/polygen-debian

Package: polygen
Architecture: all
Depends:
 ${shlibs:Depends},
 ${ocaml:Depends},
 ${misc:Depends}
Recommends: polygen-data
Description: generator of random sentences from grammar definitions
 PolyGen is a program for generating random sentences according to a grammar
 definition, that is following custom syntactical and lexical rules.
 .
 Formally, it is an interpreter of a language itself designed to define
 languages, where to interpret means executing a source program in real time
 and eventually outputting its result.
 .
 Here a source program is a grammar definition, the execution consists in the
 exploration of such grammar by selecting a random path and the result is the
 sentence built on the way.
 .
 Though PolyGen is quite a serious piece of software then, what else would be
 more noble for it than being used as a parody tool for linguistical habits,
 stereotypes and trends of this foolish era?
 .
 Principles of parody are focusing a ridiculous topic and eventually
 abstracting its rules and schemes (here in terms of a grammar definition) by
 which reproducing it through the variatio device.  And randomization is
 perfect at this purpose thanks to its purely asemantic behaviour =:)


Package: polygen-data
Architecture: all
Depends:
 polygen,
 perl,
 ${misc:Depends}
Description: grammar definitions for PolyGen
 PolyGen is a program for generating random sentences according to a grammar
 definition, that is following custom syntactical and lexical rules.
 .
 Formally, it is an interpreter of a language itself designed to define
 languages, where to interpret means executing a source program in real time
 and eventually outputting its result.
 .
 Here a source program is a grammar definition, the execution consists in the
 exploration of such grammar by selecting a random path and the result is the
 sentence built on the way.
 .
 This package contains various grammar files suited for polygen.
