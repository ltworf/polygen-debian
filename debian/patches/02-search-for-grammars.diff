diff -Naur polygen-1.0.6.ds1/src/main.ml polygen-1.0.6.ds1.patched/src/main.ml
--- polygen-1.0.6.ds1/src/main.ml	2005-11-21 21:33:38.000000000 +0100
+++ polygen-1.0.6.ds1.patched/src/main.ml	2006-09-17 13:12:15.238668750 +0200
@@ -119,6 +119,78 @@
         msg "preprocessing grammar...";
         Pre.pre decls0
 
+(* based on is_dir function from HELM *)
+let is_dir fname =
+  try
+    (Unix.stat fname).Unix.st_kind = Unix.S_DIR
+  with
+    Unix.Unix_error _ -> false
+
+(* based on find function from HELM *)
+let rec find path source = 
+  try
+    if Sys.file_exists(path^"/"^source) then
+      path^"/"^source
+    else if Sys.file_exists(path^"/"^source^".grm") then
+      path^"/"^source^".grm"
+    else
+      let handle = Unix.opendir path in
+      try 
+        let res = ref "" in 
+        try
+          while true do 
+            match Unix.readdir handle with
+            | "." | ".." -> ()
+            | s when is_dir (path^"/"^s) -> (
+                res := find (path^"/"^s) source ;
+                if !res <> "" then
+                  raise Exit
+              )
+            | s -> ()
+          done ; ""
+        with Exit -> !res
+      with End_of_file -> (Unix.closedir handle ; "")
+  with Unix.Unix_error _ -> ""
+
+let find_grammar source =
+(* TODO:
+ *  1) Check current directory
+ *  2) check $LANG. If it exists, let A be everything before _ or end of line,
+ *     and try in /usr/share/polygen/A
+ *  3) Then try a recursive search under /usr/share/polygen
+ *
+ *  LANG="_"
+ *)
+   let lang =
+     try
+       let lang = Sys.getenv "LANG" in
+       try
+         Some (String.sub lang 0 (String.index lang '_'))
+       with Not_found -> Some lang
+     with Not_found -> None
+   in
+    if (Sys.file_exists(source)) then
+    	source
+    else if (Sys.file_exists(source^".grm")) then
+    	source^".grm"
+    else match lang with
+    | Some s when Sys.file_exists ("/usr/share/polygen/"^s^"/"^source) -> (
+        prerr_endline ("LANG1 "^s) ;
+        "/usr/share/polygen/"^s^"/"^source
+      )
+    | Some s when Sys.file_exists ("/usr/share/polygen/"^s^"/"^source^".grm") -> (
+        prerr_endline ("LANG2 "^s) ;
+        "/usr/share/polygen/"^s^"/"^source^".grm"
+      )
+    | _ -> (
+        prerr_endline "LANG none" ;
+        (* Then try a recursive search under /usr/share/polygen *)
+        let f = find "/usr/share/polygen" source in 
+          if f <> "" then f
+          else source
+      )
 
 (* main *)
 
@@ -132,6 +204,9 @@
             fprintf !dest "%s\n" (Absyn1.pretty_decls "" (get_decls1 source))
 
       | Generate ->
+            let source = (find_grammar source)
+	        in
+	    
       		(* load complied or source grammar *)
             let decls =
             	try
 
